
Entity Information
------------------

Cvars:
- entity_info {0|1} (def. 1)
      Toggle display of entity information

Commands:
- dump_info
      Dumps the entity information to console

Name Tags
---------

Cvars:
- name_tags {0|1} (def. 0)
      Toggle display of names

Entity Overlays
---------------

The entity overlay system supports a particular filter syntax that allows
you to selectively choose the entities that you want a particular overlay
to apply to. The filters are specified in console via console commands.

See the "Filter Syntax" section later in this document.

Commands:
- triads_filter <filter...>
      Sets the filter for the 3D origin overlay
- overlay_filter <filter...>
      Sets the filter for the class name overlay
- bbox_filter <filter...>
      Sets the filter for the bounding box overlay
- toggle_triads
      Legacy command to toggle the 3D origin overlay on/off

Position Sampling
-----------------

This will draw a path following the motion of a player or entity. The
resolution is the interval of time (defined in seconds) between samples, 
and the sample size is the number of points to remember.

Cvars:
- sample_draw {0|1} (def. 1)
      Toggle drawing of paths
- sample_resolution <resolution> (def. 0.1)
      Sample resolution
- sample_size <size> (def. 100)
      Sample size
- sample_nodes {0|1} (def. 1)
      Draws squares on each sampled point/node
- sample_multiple {0|1} (def. 0)
      Allows you to sample the position of more than one entity at a time

Commands:
- sample [player]
      Samples an entity or a player -- do not provide any arguments to
      sample the position of the entity that you are looking at

Filter Syntax
-------------

To filter classes, just list the class names. It will match partial
strings, so "prop_" would match "prop_physics". Filters are case
in-sensitive.

Example: bbox_filter prop_ wire_
(bbox_filter is an entity overlay console command)

You can do a blacklist by putting a minus in front of the string.

Example: bbox_filter prop_ wire_ -expression

In addition to filtering by classes, you can also filter by distance,
model, and material. Matching by model or material will also work on
matching partial strings. To match the model or material, prepend @model or
@material, respectively, before the string that you want to match. You
must repeat @model or @material for each string to match, otherwise
it will assume that you are trying to filter by a class.

Example: bbox_filter @model hunter/plates prop_ wire_ @model -3x8

Note how you can do a negation filter (with the minus (-)) too.

You can specify a minimum distance that an entity must be away from you,
as well as a maximum distance that an entity can be. Use @mindist or
@maxdist.

Example: bbox_filter @maxdist 500 @mindist 10

Aliases for @model, @material, @mindist, and @maxdist are @mdl, @mat,
@min, and @max, respectively.

To specify a filter that matches all entities, you can use a lone
asterisk (*).

Example: bbox_filter *

To match no entities, as in turn off an overlay, provide no arguments.

Example: bbox_filter

Note that you can also test for the existence of material by using the
asterisk symbol (*), or test for the lack of a material by using a
asterisk symbol (*) prepended by a minus (-). The same applies to filtering
models and classes.

Example: bbox_filter @mat *
Example: bbox_filter @mat -*