@name Montezuma's Wheel Controller [sk89q]
@inputs WheelMode Board Start Props:array Manual
@outputs Mode Status Diameter ZRange Speed Algorithm BoardWheel StartWheel
@outputs MusicPath:string Title:string Elapsed Manual NumRiders
@outputs LActive LPulseRate LPattern LPulsePattern LDiameter LZRange
@outputs LColor1:vector LColor2:vector
@persist Current:array Next:array Lineup:array FileIndex Index
@persist Filename:string StartTime WaitingToPlay Seats:array
@persist FilledSeats:array LastAutoStartNotice AutoStartTime LoadingFile

# Modes:
# 0 - Boarding
# 1 - Going

# Wheel modes:
# 0 - Boarding
# 1 - Waiting to board
# 2 - Waiting to run
# 3 - Running
# 4 - Pauseds
# 5 - Boarding end warning
# 6 - Collecting to board
# 800 - Initialization

if (first() | duped()) {
    FileIndex = 1
    BoardWheel = 1
    MusicPath = ""
    LActive = 0
    
    Lineup = array("HL2_song16.txt", "tf2_8.txt", "HL2_song15.txt", "HL2_song10.txt", "tf2_4.txt")
    timer("Load", 0)
    
    for (I = 1, Props:count()) {
        Props[I, entity]:removeTrails()
    }
    
    Seats = array()
    Constraints = entity():getConstraints()
    for (I = 1, Constraints:count()) {
        if (Constraints[I, entity]:type() == "prop_vehicle_prisoner_pod") {
            Seats:pushEntity(Constraints[I, entity])
        }
    }
    
    timer("CheckSeats", 100)
    runOnChat(1)
}
if (~Props) {
    Seats = array()
    
    Constraints = entity():getConstraints()
    for (I = 1, Constraints:count()) {
        if (Constraints[I, entity]:type() == "prop_vehicle_prisoner_pod") {
            Seats:pushEntity(Constraints[I, entity])
        }
    }
}
if (chatClk()) {
    if (lastSpoke() != owner()) {
        exit()
    }
    
    M = lastSaid():matchFirst("^!mwdelay (-?[0-9]+)$")
    if (M) {
        hideChat(1)
        Delay = M:toNumber(10)
        
        AutoStartTime += Delay
        print(format("[Montezuma's Wheel] Delaying by %d seconds...", Delay))
        
        if (Delay > 0) {
            for (I = 1, Seats:count()) {
                Seats[I, entity]:hintDriver(format("A ride operator has delayed the start by %d seconds.", Delay), 6)
            }
        } else {
            for (I = 1, Seats:count()) {
                Seats[I, entity]:hintDriver(format("A ride operator has quickened the time until start by %d seconds.", -Delay), 6)
            }
        }
        
        exit()
    }
    
    M = lastSaid():matchFirst("^!mwnext$")
    if (M) {
        hideChat(1)
        
        if (Mode == 0 | LoadingFile) {
            print("[Montezuma's Wheel] Not in a state where skipping is possible")
        } else {
            Current = Next
            Next = array()
            Title = ""
            MusicPath = ""
            LActive = 0
            Index = 1
            StartTime = curtime()
            
            timer("Load", 0)
        }
        
        exit()
    }
}
if (clk("Load")) {
    if (Current:count() == 0 | Next:count() == 0) {
        if (Lineup[FileIndex, string]) {
            if (fileCanLoad()) {
                Filename = "montezuma_wheel/" + Lineup[FileIndex, string]
                #print(format("[Montezuma's Wheel] Loading '%s'...", Filename))
                runOnFile(1)
                fileRemove(Filename)
                fileLoad(Filename)
                LoadingFile = 1
            } else {
                #print("[Montezuma's Wheel] Can't load yet, waiting 2 seconds...")
                timer("Load", 2000)
            }
        }
    }
}
if (clk("CheckSeats")) {
    LastNumRiders = NumRiders
    NumRiders = 0
    
    for (I = 1, Seats:count()) {
        Seat = Seats[I, entity]
        Filled = Seat:driver() ? 1 : 0
        
        if (Filled) {
            NumRiders++
        }
        
        if (Filled & !FilledSeats[I, number]) {
            if (Mode == 0) {
                if (!Manual) {
                    Seat:hintDriver("Welcome to Montezuma's Wheel! The ride will begin shortly.", 10)
                } else {
                    Seat:hintDriver("Welcome to Montezuma's Wheel! The ride must be started by an operator.", 10)
                }
            } else {
                if (Next:count() == 0) {
                    Seat:hintDriver("You entered mid-ride, and you may not hear music.", 10)
                } else {
                    Seat:hintDriver("You entered mid-ride. You may not hear music until the next song.", 10)
                }
            }
        }
        
        FilledSeats[I, number] = Filled
    }
    
    if (!Manual) {
        if (NumRiders == 0 & Mode == 1 & WheelMode == 3) {
            print("[Montezuma's Wheel] No riders detected; aborting")
            
            BoardWheel = 1
            StartWheel = 0
            Title = ""
            MusicPath = ""
            LActive = 0
            Current = array()
            Next = array()
            FileIndex = 1
            WaitingToPlay = 0
            Mode = 0
            AutoStartTime = 0
            
            for (I = 1, Props:count()) {
                soundStop(I)
                Props[I, entity]:removeTrails()
            }
            
            stoptimer("PlayStinger")
            timer("Load", 0)
            runOnTick(0)
        } elseif (Mode == 0 & WheelMode == 0) {
            if (NumRiders == 0) {
                AutoStartTime = 0
                LastAutoStartNotice = 0
            } else {
                if (AutoStartTime == 0) {
                    AutoStartTime = curtime() + 30
                    
                    for (I = 1, Seats:count()) {
                        Seats[I, entity]:soundPlay(I, 10, "buttons/button17.wav")
                        Seats[I, entity]:printDriver("Montezuma's Wheel will be embarking in 30 seconds.")
                    }
                    
                    LastAutoStartNotice = curtime()
                } else {
                    StartETA = AutoStartTime - curtime()
                    
                    if (StartETA <= 0) {
                        BoardWheel = 0
                        StartWheel = 1
                        Diameter = 1000
                        ZRange = 1000
                        Algorithm = 0
                        Speed = 0
                        Index = 1
                        WaitingToPlay = 1
                        Mode = 1
                        
                        for (I = 1, Seats:count()) {
                            Seats[I, entity]:hintDriver("TF2 is required for some of the music.", 6)
                        }
                        
                        timer("PlayStinger", 3000)
                    } elseif (floor(StartETA) % 5 == 0 | StartETA <= 5 & floor(StartETA) != 0) {
                        if (curtime() - LastAutoStartNotice > 1) {
                            if (floor(StartETA) == 1) {
                                for (I = 1, Seats:count()) {
                                    Seats[I, entity]:soundPlay(I, 2, "buttons/button17.wav")
                                    Seats[I, entity]:printDriver("Embarking in 1 second.")
                                }
                            } else {
                                for (I = 1, Seats:count()) {
                                    Seats[I, entity]:soundPlay(I, 2, "buttons/button17.wav")
                                    Seats[I, entity]:printDriver(format("Embarking in %d seconds.", floor(StartETA)))
                                }
                            }
                            LastAutoStartNotice = curtime()
                        }
                    }
                }
            }
        }
    }
    
    timer("CheckSeats", 100)
}
if (clk("PlayStinger")) {
    #for (I = 1, Props:count()) {
    #    Props[I, entity]:soundPlay(I, 10, "music/stingers/HL1_stinger_song28.mp3")
    #}
}
if (fileClk()) {
    #print("[Montezuma's Wheel] Loaded!")
    FileIndex++
    LoadingFile = 0
    
    if (Current:count() == 0) {
        Current = fileRead(Filename):explode("\n")
        
        if (Lineup[FileIndex, string]) {
            Next = array()
            timer("Load", 11000)
        }
    } else {
        Next = fileRead(Filename):explode("\n")
    }
    
    fileRemove(Filename)
}
if (~Manual) {
    if (Manual & Mode == 0 & WheelMode == 0) {
        for (I = 1, Seats:count()) {
            Seats[I, entity]:hintDriver("The ride operator has enabled manual boarding. S/he must start the ride manually now.", 6)
        }
    } elseif (!Manual) {
        AutoStartTime = 0
        LastAutoStartNotice = 0
    }
}
if (~Board & Board) {
    if (Mode != 0) { # Is currently not boarding
        BoardWheel = 1
        StartWheel = 0
        Title = ""
        MusicPath = ""
        LActive = 0
        Current = array()
        Next = array()
        FileIndex = 1
        WaitingToPlay = 0
        Mode = 0
        AutoStartTime = 0
        
        for (I = 1, Props:count()) {
            Props[I, entity]:removeTrails()
            soundStop(I)
        }
        
        for (I = 1, Seats:count()) {
            Seats[I, entity]:hintDriver("Please hold as we return to the boarding area.", 6)
        }
        
        stoptimer("PlayStinger")
        timer("Load", 0)
        runOnTick(0)
    }
}
if (~Start & Start) {
    if (Mode != 1) { # Is currently not running
        if (!Manual & NumRiders == 0) {
            print("[Montezuma's Wheel] No riders detected. Turn off manual mode to override.")
            exit()
        }
        
        BoardWheel = 0
        StartWheel = 1
        Diameter = 1000
        ZRange = 1000
        Algorithm = 0
        Speed = 0
        Index = 1
        WaitingToPlay = 1
        Mode = 1
        
        for (I = 1, Seats:count()) {
            Seats[I, entity]:hintDriver("A ride operator requested a start.", 6)
            Seats[I, entity]:hintDriver("TF2 is required for some of the music.", 6)
        }
        
        timer("PlayStinger", 3000)
    }
}
if (~WheelMode) {
    if (WaitingToPlay & WheelMode == 3) {
        StartTime = curtime() + 1 # 1 sec delay
        runOnTick(1)
    }
}
if (tickClk()) {
    if (Mode == 0) { exit() }
    
    WaitingToPlay = 0
    Elapsed = curtime() - StartTime
    
    while (1) {
        Line = Current[Index, string]:trimLeft()
        
        if (Index > Current:count()) { # Ran out of data
            Current = Next
            
            if (Current:count() > 0) {
                Next = array()
                Title = ""
                MusicPath = ""
                LActive = 0
                Index = 1
                StartTime = curtime()
                
                timer("Load", 0)
            } else { # Ran out of ride
                BoardWheel = 1
                StartWheel = 0
                Title = ""
                MusicPath = ""
                LActive = 0
                Current = array()
                Next = array()
                FileIndex = 1
                Mode = 0
                AutoStartTime = 0
                
                for (I = 1, Props:count()) {
                    Props[I, entity]:removeTrails()
                }
                
                for (I = 1, Seats:count()) {
                    Seats[I, entity]:hintDriver("Please hold as we return to the boarding area.", 6)
                }
                
                timer("Load", 0)
                runOnTick(0)
            }
            
            exit()
        }
        
        if (Line & Line:sub(1, 1) != ";") {
            Parts = Line:explode("\t")
            
            # Not quite there yet!
            if (Parts[1, string]:toNumber(10) > Elapsed - 3) {
                break   
            }
            
            if (Parts[2, string] == "song") {
                MusicPath = Parts[3, string]
            } elseif (Parts[2, string] == "title") {
                Title = Parts[3, string]
                
                for (I = 1, Seats:count()) {
                    Seats[I, entity]:hintDriver(format("\"%s\"", Title), 6)
                }
            } elseif (Parts[2, string] == "diameter") {
                Diameter = Parts[3, string]:toNumber(10)
            } elseif (Parts[2, string] == "height") {
                ZRange = Parts[3, string]:toNumber(10)
            } elseif (Parts[2, string] == "algorithm") {
                Algorithm = Parts[3, string]:toNumber(10)
            } elseif (Parts[2, string] == "speed") {
                Speed = Parts[3, string]:toNumber(10)
            } elseif (Parts[2, string] == "trails") {
                StartSize = Parts[3, string]:toNumber(10)
                EndSize = Parts[4, string]:toNumber(10)
                Length = Parts[5, string]:toNumber(10)
                Material = Parts[6, string]
                ColorParts = Parts[7, string]:explode(",")
                Color = vec(ColorParts[1, string]:toNumber(10),
                            ColorParts[2, string]:toNumber(10),
                            ColorParts[3, string]:toNumber(10))
                Alpha = Parts[8, string]:toNumber(10)
                
                for (I = 1, Props:count()) {
                    Props[I, entity]:setTrails(StartSize, EndSize, Length,
                                               Material, Color, Alpha)
                }
            } elseif (Parts[2, string] == "clrtrails") {
                for (I = 1, Props:count()) {
                    Props[I, entity]:removeTrails()
                }
            } elseif (Parts[2, string] == "lightson") {
                LActive = 1
            } elseif (Parts[2, string] == "lightsoff") {
                LActive = 0
            } elseif (Parts[2, string] == "lightsrate") {
                LPulseRate = Parts[3, string]:toNumber(10)
            } elseif (Parts[2, string] == "lights") {
                LDiameter = Parts[3, string]:toNumber(10)
                LZRange = Parts[4, string]:toNumber(10)
                LPattern = Parts[5, string]:toNumber(10)
                LPulsePattern = Parts[6, string]:toNumber(10)
            } elseif (Parts[2, string] == "lightscol") {
                ColorParts = Parts[3, string]:explode(",")
                LColor1 = vec(ColorParts[1, string]:toNumber(10),
                              ColorParts[2, string]:toNumber(10),
                              ColorParts[3, string]:toNumber(10))
                
                ColorParts = Parts[4, string]:explode(",")
                LColor2 = vec(ColorParts[1, string]:toNumber(10),
                              ColorParts[2, string]:toNumber(10),
                              ColorParts[3, string]:toNumber(10))
            } elseif (Parts[2, string] == "end") {
                # This really does nothing, but this should be at the end of
                # the timings file for it to take effect
            } else {
                print(format("[Montezuma's Wheel] Unrecognized instruction: (line %d)",
                             Parts[2, string], Index))
            }
        }
        
        Index++
    }
}