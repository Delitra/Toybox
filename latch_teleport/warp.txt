@name THE DRILL TO PIERCE THE HEAVENS [sk89q]
@outputs ResourceNode:entity Cache:wirelink Latches:table HoverDrive:wirelink
@outputs State Target:entity TargetID WarpLoc:vector HomeLoc:vector
@outputs LastPos:table DoEffect

STATE_IDLE = 0
STATE_LATCH = 1
STATE_WARP = 2
STATE_UNLATCH = 3
STATE_HIDE = 4

if (first() | dupefinished()) {
    entity():setAlpha(0)
    
    Cons = entity():getConstraints()
    
    for (I = 1, Cons:count()) {
        E = Cons[I, entity]
        if (E:type() == "resource_node") {
            ResourceNode = E
        }
    }
    
    for (I = 1, Cons:count()) {
        E = Cons[I, entity]
        if (E:type() == "gmod_wire_latch") {
            ID = toString(E:getColor():x())
            Latch = E:getWirelink()
            Latches[ID, wirelink] = Latch
            Latch["Activate", number] = 0
        } elseif (E:type() == "gmod_wire_hoverdrivecontroler") {
            HoverDrive = E:getWirelink()
            HoverDrive["Sound", number] = 0
        } elseif (E:type() == "storage_cache") {
            Cache = E:getWirelink()
        }
        
        E:link(ResourceNode)
    }
    
    gSetGroup("SKWarp")
    LastPos[owner():steamID(), vector] = owner():pos()
    State = STATE_IDLE
    
    runOnChat(1)
    interval(1000)

##################################################
# Detect chat commands
##################################################

} elseif (chatClk()) {
    if (owner() != lastSpoke() & !owner():isSteamFriend(lastSpoke())) {
        exit()
    }
    
    Cmd = lastSaid():explode(" ")[1, string]:lower():trim()
    Args = lastSaid():sub(Cmd:length() + 2):trim()
    
    # ---------- gothere ----------
    if (Cmd == "tp" | Cmd == "tpfx" | Cmd == "last" | Cmd == "lastfx") {
        hideChat(1)
        
        if (State != STATE_IDLE) {
            exit()
        }
        
        hint("HEAVEN PIERCER: Incoming trajectory...", 7)
        
        rangerFlags("WE")
        rangerFilter(lastSpoke())
        RD = rangerOffset(50000, lastSpoke():shootPos(), lastSpoke():eye())
        
        Target = lastSpoke()
        WarpLoc = (Cmd == "last" | Cmd == "lastfx") ? 
            LastPos[lastSpoke():steamID(), vector] : 
            (RD:position() + vec(0, 0, 2))
        LastPos[lastSpoke():steamID(), vector] = Target:pos()
        
        DoWarp = 1
        DoEffect = Cmd == "tpfx" | Cmd == "lastfx"
        
        hideChat(1)
    
    # ---------- bring ----------
    } elseif (Cmd == "bring" | Cmd == "bringfx") {
        hideChat(1)
        
        if (State != STATE_IDLE) {
            exit()
        }
        
        Target = findPlayerByName(Args)
        
        if (Target) {
            hint("HEAVEN PIERCER: Bringing: " + Target:name(), 7)
            
            rangerFlags("WE")
            rangerFilter(lastSpoke())
            RD = rangerOffset(50000, lastSpoke():shootPos(), lastSpoke():eye())
        
            WarpLoc = RD:position() + vec(0, 0, 2)

            DoWarp = 1
            DoEffect = Cmd == "bringfx"
        } else {
            hint("HEAVEN PIERCER: Player name not found!", 7)
        }
    
    # ---------- goto ----------
    } elseif (Cmd == "goto" | Cmd == "gotofx") {
        hideChat(1)
        
        if (State != STATE_IDLE) {
            exit()
        }
        
        Ply = findPlayerByName(Args)
        
        if (Ply) {
            hint("HEAVEN PIERCER: Going to: " + Ply:name(), 7)
            
            Target = lastSpoke()
            WarpLoc = Ply:pos() + vec(0, 0, 80)

            DoWarp = 1
            DoEffect = Cmd == "gotofx"
        } else {
            hint("HEAVEN PIERCER: Player name not found!", 7)
        }
    
    # ---------- loc ----------
    } elseif (Cmd == "loc" | Cmd == "locfx") {
        hideChat(1)
        
        if (State != STATE_IDLE) {
            exit()
        }
        
        Key = Args:lower()
        Locs = glonDecodeTable(gGetStr("Locs"))
        WarpLoc = Locs[Key, vector]
        
        if (WarpLoc) {
            Target = lastSpoke()
            LastPos[lastSpoke():steamID(), vector] = Target:pos()

            DoWarp = 1
            DoEffect = Cmd == "locfx"
            
            hint("HEAVEN PIERCER: Going to: " + Key, 7)
        } else {
            hint("HEAVEN PIERCER: No such known location!", 7)
        }
    
    # ---------- put ----------
    } elseif ((Cmd == "put" | Cmd == "putfx") & owner() == lastSpoke()) {
        hideChat(1)
        
        if (State != STATE_IDLE) {
            exit()
        }
        
        ArgsA = Args:explode(" ")
        M = Args:match("^([^ ]+) +(.+)$")
        Key = M[1, string]:lower()
        Name = M[2, string]:lower()
        Locs = glonDecodeTable(gGetStr("Locs"))
        WarpLoc = Locs[Key, vector]
        Target = findPlayerByName(Name)
        
        if (WarpLoc & Target) {
            DoWarp = 1
            DoEffect = Cmd == "putfx"
            
            hint("HEAVEN PIERCER: Going to: " + Key, 7)
        } elseif (!Target) {
            hint("HEAVEN PIERCER: Player name not found!", 7)
        } else {
            hint("HEAVEN PIERCER: No such known location!", 7)
        }
    
    # ---------- setloc ----------
    } elseif (Cmd == "setloc" & owner() == lastSpoke()) {
        hideChat(1)
        
        rangerFlags("WE")
        RD = rangerOffset(50000, owner():shootPos(), owner():eye())
        
        Key = Args:lower()
        Locs = glonDecodeTable(gGetStr("Locs"))
        Locs[Key, vector] = owner():pos()
        gSetStr("Locs", glonEncode(Locs))
        
        hint("HEAVEN PIERCER: Added location: " + Key, 7)
    
    # ---------- wstats ----------
    } elseif (Cmd == "wstatus" & owner() == lastSpoke()) {
        hideChat(1)
        print(_HUD_PRINTTALK, format("Energy: %d/%d",
            Cache["Energy", number], Cache["Max Energy", number]))
    
    # ---------- wreset ----------
    } elseif (Cmd == "wreset" & owner() == lastSpoke()) {
        hideChat(1)
        reset()
    
    # ---------- wdel ----------
    } elseif (Cmd == "wd" & owner() == lastSpoke()) {
        hideChat(1)
        selfDestructAll()
    }

##################################################
# Do warp
##################################################

} elseif (clk("Process")) {
    # ---------- STATE_LATCH ----------
    if (State == STATE_LATCH) {
        Latch = Latches[toString(TargetID), wirelink]
        Latch["Activate", number] = 1
        
        State++
        timer("Process", 300)
    
    # ---------- STATE_WARP ----------
    } elseif (State == STATE_WARP) {
        HoverDrive["JumpTarget", vector] = WarpLoc + 
            (HoverDrive:entity():pos() - Target:pos())
        HoverDrive["Jump", number] = 1
        
        if (DoEffect) {
            holoCreate(2, WarpLoc)
            holoAlpha(2, 0)
            holoEntity(2):soundPlay(2, 5, "ambient/explosions/citadel_end_explosion2.wav", 2)
        }
        
        State++
        timer("Process", 300)
    
    # ---------- STATE_UNLATCH ----------
    } elseif (State == STATE_UNLATCH) {
        Latch = Latches[toString(TargetID), wirelink]
        Latch["Activate", number] = 0
        
        if (DoEffect) {
            fx("bigwhomphsplode", entity():toWorld(entity():toLocal(WarpLoc)), 5000)
            #particle("aurora_shockwave", holoEntity(1))
        }
        
        State++
        timer("Process", 500)
    
    # ---------- STATE_HIDE ----------
    } elseif (State == STATE_HIDE) {
        HoverDrive["JumpTarget", vector] = HomeLoc
        HoverDrive["Jump", number] = 1
        
        State = STATE_IDLE
        timer("Cleanup", 5000)
    }

} elseif (clk("Cleanup")) {
    holoDeleteAll()
    soundPurge()

##################################################
# Check
##################################################

} elseif (clk()) {
    if (!owner()) {
        selfDestructAll()
    }
}

if (DoWarp) {
    TargetID = Target:id()
    
    Latch = Latches[toString(TargetID), wirelink]
    if (!Latch) {
        hint("HEAVEN PIERCER: No latch!", 7)
        exit()
    }
    
    HomeLoc = HoverDrive:entity():pos()
    State = STATE_LATCH
    
    # Initial warp
    HoverDrive["JumpTarget", vector] = Target:pos() + Target:vel() * 0.3
    HoverDrive["Jump", number] = 1
    
    holoDeleteAll()
    soundPurge()
    
    if (DoEffect) {
        fx("bigwhomphsplode", Target:pos(), 5000)
        
        holoCreate(1, Target:pos())
        holoAlpha(1, 0)
        holoEntity(1):soundPlay(1, 5, "ambient/explosions/citadel_end_explosion2.wav", 2)
        holoParent(1, Target)
    
        stoptimer("Cleanup")
    }
    timer("Process", 300)
}
